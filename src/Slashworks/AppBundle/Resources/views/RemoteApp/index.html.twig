{% extends "SlashworksAppBundle::Layout/base.html.twig" %}

{% block content -%}
    <div class="m-b-md" style="position: relative">
        <h1 class="page-header" style="">{{ "remote_app.list"|trans }}</h1>

        <div class="head-controls">
            <a href="#" onclick="SYSTEM.runAllSingleApiCalls();" class="btn btn-primary btn-circle" data-toggle="tooltip" data-placement="top" data-original-title="{{ "remote_app.api_call_all"|trans }}"><i class="fa fa-refresh"></i></a>
            <a href="{{ path('remote_app_new') }}" class="btn btn-primary btn-circle" data-toggle="tooltip" data-placement="top" data-original-title="{{ "remote_app.new"|trans }}"><i class="fa fa-plus"></i></a>
        </div>
    </div>
    <table class="table table-striped m-b-none dt-responsive" data-ride="datatables" id="remote_app_table" style="width: 100%;">
        <thead>
        <tr>
            <th class="sorting">{{ "remote_app.data.httpstatus"|trans }}</th>
            <th class="sorting">{{ "remote_app.name"|trans }}</th>
            <th class="sorting">{{ "remote_app.data.lastRun"|trans }}</th>
            <th class="sorting">{{ "remote_app.data.websitename"|trans }}</th>
            <th class="sorting">{{ "remote_app.data.maintenance"|trans }}</th>
            <th class="sorting">{{ "remote_app.customer"|trans }}</th>
            <th class="sorting">Extensions</th>
            <th>{{ "global.action"|trans }}</th>
        </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
{% endblock %}

{% block js_footer %}
    <script>
        var table = $('#remote_app_table').on('init.dt', function ( e, settings, json ) {


            $('#remote_app_table tbody tr').each(function (i,tr) {
                var row = table.row($(tr));
                var rowData = row.data();
                if(typeof rowData != "undefined") {
                    $(document).bind("api-call-row-update-" + rowData.Id, function (event, data) {
                        if (rowData.id == data.id) {

                            rowData = data;
                            row.data(data);
                        }
                    });

                    if (rowData.Activated == false) {
                        $(tr).addClass('inactive');
                        $(tr).children(0).removeClass('details-control');
                    } else {
                        $(tr).removeClass('inactive');
                    }
                }

            });

            $('#remote_app_table').tooltip({
                selector: "[data-toggle=tooltip]",
                container: "body"
            });

        }).DataTable({
            "ajax": "{{ path('remote_app_ajax') }}",
            "language": {"url":"/backend/dt/languagefile/de"},
            "columns": [
                {

                    "className":      'status',
                    "data": "Status"
                },
                {
                    "className":      'name',
                    "data": "Name"
                },
                {
                    "className":      'lastrun',
                    "data": "LastRun"
                },
                {
                    "className":      'version',
                    "data": getVersion
                },
                {
                    "className":      'maintancemode',
                    "data": "History.ConfigMaintenancemode"
                },
                {
                    "className":      'customer',
                    "data":           "Customer"
                },
                {
                    "className":      'extensions',
                    "data":           getExtensions

                },
                {
                    "className":      'action',
                    "orderable":      false,
                    "data":           "action"
                }
            ],

            "order": [],
            "rowCallback": function( row, data, index ) {

                if(data.Statuscode != 200) {

                    $(row).addClass('offline');

                }
                if(data.activated != true) {

                    $(row).addClass('deactivated');

                }
            },
            "createdRow": function ( row, data, index ) {
                //                data.History.Statuscode = data.Statuscode;
                //                this.fnUpdate(data, index, undefined, false );

            }
        });

        function getVersion(data, type, dataToSet) {
            if(data.History.Name && data.History.Version) {
                return data.History.Name + " " + data.History.Version;
            }else{
                return "";
            }
        }

        function getExtensions(data, type, dataToSet) {

            var strReturn = '';

            $.each(data.History.Extensions, function(key) {
                strReturn += key + ' ';
            });

            return strReturn;
        }

    </script>
{% endblock %}
